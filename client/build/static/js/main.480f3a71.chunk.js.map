{"version":3,"sources":["hooks/auth.hook.js","context/AuthContext.js","hooks/http.hook.js","pages/AuthPage.js","hooks/message.hook.js","pages/CreatePage.js","components/LinkCard.js","components/Loader.js","pages/DetailPage.js","components/LinksList.js","pages/LinksPage.js","components/Navbar.js","App.js","routes.js","reportWebVitals.js","index.js"],"names":["storageName","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearErrors","AuthPage","auth","useContext","text","window","M","toast","html","email","password","form","setForm","useEffect","changeHandler","event","target","name","value","registerHandler","loginHandler","className","id","type","onChange","htmlFor","style","marginRight","disabled","onClick","CreatePage","history","useHistory","link","setLink","pressHandler","console","log","key","from","Authorization","push","_id","paddingTop","e","onKeyPress","LinkCard","href","to","rel","clicks","Date","date","toLocaleDateString","Loader","DetailPage","linkId","useParams","getLink","fetched","LinksList","links","length","map","index","LinksPage","setLinks","fetchLinks","Navbar","padding","preventDefault","App","setToken","ready","setReady","setUserId","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","useRoutes","Provider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.480f3a71.chunk.js","sourcesContent":["import { useState, useCallback, useEffect } from \"react\";\r\n\r\nconst storageName = \"userData\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(null);\r\n  const [ready, setReady] = useState(false);\r\n  const [userId, setUserId] = useState(null);\r\n\r\n  const login = useCallback((jwtToken, id) => {\r\n    setToken(jwtToken);\r\n    setUserId(id);\r\n\r\n    localStorage.setItem(\r\n      storageName,\r\n      JSON.stringify({ userId: id, token: jwtToken })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n\r\n    localStorage.removeItem(storageName);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const data = JSON.parse(localStorage.getItem(storageName));\r\n\r\n    if (data && data.token) {\r\n      login(data.token, data.userId);\r\n    }\r\n\r\n    setReady(true);\r\n  }, [login]);\r\n\r\n  return { login, logout, token, userId, ready };\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nfunction noop() {}\r\n\r\nexport const AuthContext = createContext({\r\n  token: null,\r\n  userId: null,\r\n  login: noop,\r\n  logout: noop,\r\n  isAuthenticated: false,\r\n});\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [error, setError] = useState(null);\r\n\r\n  const request = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setLoading(true);\r\n\r\n      try {\r\n        if (body) {\r\n          body = JSON.stringify(body);\r\n          headers[\"Content-Type\"] = \"application/json\";\r\n        }\r\n\r\n        const response = await fetch(url, {\r\n          method: method,\r\n          body: body,\r\n          headers: headers,\r\n        });\r\n\r\n        const data = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(data.message || \"Что-то пошло не так\");\r\n        }\r\n\r\n        setLoading(false);\r\n\r\n        return data;\r\n      } catch (e) {\r\n        setLoading(false);\r\n\r\n        setError(e.message);\r\n\r\n        throw e;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearErrors = useCallback(() => setError(null), []);\r\n\r\n  return { loading, request, error, clearErrors };\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { useMessage } from \"../hooks/message.hook\";\r\n\r\nexport const AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const message = useMessage();\r\n  const { loading, request, error, clearErrors } = useHttp();\r\n\r\n  const [form, setForm] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    message(error);\r\n    clearErrors();\r\n  }, [error, message, clearErrors]);\r\n\r\n  const changeHandler = (event) => {\r\n    setForm({\r\n      ...form,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  const registerHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/register\", \"POST\", { ...form });\r\n      message(data.message);\r\n    } catch (e) {}\r\n  };\r\n  const loginHandler = async () => {\r\n    try {\r\n      const data = await request(\"/api/auth/login\", \"POST\", { ...form });\r\n\r\n      auth.login(data.token, data.userId);\r\n    } catch (e) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s6 offset-s3\">\r\n        <h1>Сократи ссылку</h1>\r\n        <div className=\"card grey lighten-3\">\r\n          <div className=\"card-content black-text\">\r\n            <span className=\"card-title\">Авторизация</span>\r\n            <div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  value={form.email}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"email\">Email</label>\r\n              </div>\r\n              <div className=\"input-field\">\r\n                <input\r\n                  id=\"password\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  value={form.password}\r\n                  onChange={changeHandler}\r\n                />\r\n                <label htmlFor=\"password\">Password</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"card-action\">\r\n            <button\r\n              className=\"btn yellow darken-4\"\r\n              style={{ marginRight: 10 }}\r\n              disabled={loading}\r\n              onClick={loginHandler}\r\n            >\r\n              Войти\r\n            </button>\r\n            <button\r\n              className=\"btn light-blue darken-1\"\r\n              onClick={registerHandler}\r\n              disabled={loading}\r\n            >\r\n              Регистрация\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// { email: 'olegderyabin22@gmail.com', password: 'dszfsdfsad' }\r\n","import { useCallback } from \"react\";\r\n\r\nexport const useMessage = () => {\r\n  return useCallback((text) => {\r\n    if (window.M && text) {\r\n      window.M.toast({ html: text });\r\n    }\r\n  }, []);\r\n};\r\n","import React, { useContext, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nexport const CreatePage = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n  const { request } = useHttp();\r\n  const [link, setLink] = useState(\"\");\r\n\r\n  const pressHandler = async (event) => {\r\n    console.log(\"work\");\r\n    if (event.key === \"Enter\") {\r\n      try {\r\n        console.log(\"Enter\");\r\n        const data = await request(\r\n          \"/api/link/generate\",\r\n          \"POST\",\r\n          {\r\n            from: link,\r\n          },\r\n          { Authorization: `Bearer ${auth.token}` }\r\n        );\r\n        history.push(`detail/${data.link._id}`);\r\n      } catch (e) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col s8 offset-s2\" style={{ paddingTop: \"2rem\" }}>\r\n        <div className=\"input-field\">\r\n          <input\r\n            id=\"link\"\r\n            type=\"text\"\r\n            name=\"link\"\r\n            value={link}\r\n            onChange={(e) => setLink(e.target.value)}\r\n            onKeyPress={pressHandler}\r\n          />\r\n          <label htmlFor=\"email\">Вставьте ссылку</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const LinkCard = ({ link }) => {\r\n  return (\r\n    <>\r\n      <h2>Ссылка</h2>\r\n      <p>\r\n        Ваша ссылка:{\" \"}\r\n        <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.to}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Откуда:{\" \"}\r\n        <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {link.from}\r\n        </a>\r\n      </p>\r\n      <p>\r\n        Количество кликов по ссылке: <strong>{link.clicks}</strong>\r\n      </p>\r\n      <p>\r\n        Дата создания:{\" \"}\r\n        <strong>{new Date(link.date).toLocaleDateString()}</strong>\r\n      </p>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"preloader-wrapper big active\">\r\n    <div className=\"spinner-layer spinner-blue-only\">\r\n      <div className=\"circle-clipper left\">\r\n        <div className=\"circle\"></div>\r\n      </div>\r\n      <div className=\"gap-patch\">\r\n        <div className=\"circle\"></div>\r\n      </div>\r\n      <div className=\"circle-clipper right\">\r\n        <div className=\"circle\"></div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { LinkCard } from \"../components/LinkCard\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nexport const DetailPage = () => {\r\n  const { request, loading } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n  const [link, setLink] = useState(null);\r\n  const linkId = useParams().id;\r\n\r\n  const getLink = useCallback(async () => {\r\n    try {\r\n      console.log(linkId);\r\n      const fetched = await request(`/api/link/${linkId}`, \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n\r\n      setLink(fetched);\r\n    } catch (e) {}\r\n  }, [token, linkId, request]);\r\n\r\n  useEffect(() => {\r\n    getLink();\r\n  }, [getLink]);\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return <>{!loading && link && <LinkCard link={link} />}</>;\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const LinksList = ({ links }) => {\r\n  if (!links.length) {\r\n    return <p className=\"center\">Ссылок пока нет</p>;\r\n  }\r\n\r\n  return (\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>№</th>\r\n          <th>Оргинальная</th>\r\n          <th>Сокращенная</th>\r\n          <th>Открыть</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {links.map((link, index) => {\r\n          return (\r\n            <tr key={link._id}>\r\n              <td>{index + 1}</td>\r\n              <td>{link.from}</td>\r\n              <td>{link.to}</td>\r\n              <td>\r\n                <Link to={`/detail/${link._id}`}>Открыть</Link>\r\n              </td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n","import React, { useCallback, useContext, useState, useEffect } from \"react\";\r\nimport { LinksList } from \"../components/LinksList\";\r\nimport { Loader } from \"../components/Loader\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\nimport { useHttp } from \"../hooks/http.hook\";\r\n\r\nexport const LinksPage = () => {\r\n  const [links, setLinks] = useState([]);\r\n  const { loading, request } = useHttp();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const fetchLinks = useCallback(async () => {\r\n    try {\r\n      const fetched = await request(\"/api/link\", \"GET\", null, {\r\n        Authorization: `Bearer ${token}`,\r\n      });\r\n\r\n      setLinks(fetched);\r\n    } catch (e) {}\r\n  }, [token, request]);\r\n\r\n  useEffect(() => {\r\n    fetchLinks();\r\n  }, [fetchLinks]);\r\n\r\n  if (loading) return <Loader />;\r\n\r\n  return <>{!loading && <LinksList links={links} />}</>;\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../context/AuthContext\";\r\n\r\nexport const Navbar = () => {\r\n  const history = useHistory();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const logoutHandler = (event) => {\r\n    event.preventDefault();\r\n    auth.logout();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper blue darken-1\" style={{ padding: \"0 2rem\" }}>\r\n        <span className=\"brand-logo\">Сокращение ссылок</span>\r\n        <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n          <li>\r\n            <NavLink to=\"/create\">Создать</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/links\">Сслки</NavLink>\r\n          </li>\r\n          <li>\r\n            <a href=\"/\" onClick={logoutHandler}>\r\n              Выйти\r\n            </a>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","import { BrowserRouter as Router } from \"react-router-dom\";\nimport { useAuth } from \"./hooks/auth.hook\";\nimport { useRoutes } from \"./routes\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport \"materialize-css\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Loader } from \"./components/Loader\";\n\nfunction App() {\n  const { token, login, logout, userId, ready } = useAuth();\n  const isAuthenticated = !!token;\n  const routes = useRoutes(isAuthenticated);\n\n  if (!ready) {\n    return <Loader />;\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ token, login, logout, userId, isAuthenticated }}\n    >\n      <Router>\n        {isAuthenticated && <Navbar />}\n        <div className=\"container\">{routes}</div>\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\r\nimport { Switch, Redirect, Route } from \"react-router-dom\";\r\nimport { AuthPage } from \"./pages/AuthPage\";\r\nimport { CreatePage } from \"./pages/CreatePage\";\r\nimport { DetailPage } from \"./pages/DetailPage\";\r\nimport { LinksPage } from \"./pages/LinksPage\";\r\n\r\nexport const useRoutes = (isAuthenticated) => {\r\n  if (isAuthenticated) {\r\n    return (\r\n      <Switch>\r\n        <Route path=\"/links\" exact>\r\n          <LinksPage />\r\n        </Route>\r\n        <Route path=\"/create\" exact>\r\n          <CreatePage />\r\n        </Route>\r\n        <Route path=\"/detail/:id\">\r\n          <DetailPage />\r\n        </Route>\r\n        <Redirect to=\"/create\" />\r\n      </Switch>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact>\r\n        <AuthPage />\r\n      </Route>\r\n      <Redirect to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}